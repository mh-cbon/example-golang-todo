package main

import "net/http"

// file generated by
// github.com.mh-cbon/channeler
// do not edit

// SyncController is channeled.
type SyncController struct {
	embed Controller
	ops   chan func()
	stop  chan bool
}

// NewSyncController constructs a chenneled version of Controller
func NewSyncController() *SyncController {
	ret := &SyncController{
		ops:  make(chan func()),
		stop: make(chan bool),
	}
	go ret.Start()
	return ret
}

// Start the main loop
func (t *SyncController) Start() {
	for {
		select {
		case op := <-t.ops:
			op()
		case <-t.stop:
			return
		}
	}
}

// Stop the main loop
func (t *SyncController) Stop() {
	t.stop <- true
}

// todoIndex is channeled
func (t *SyncController) todoIndex(res http.ResponseWriter, req *http.Request) {
	t.ops <- func() {
		t.embed.todoIndex(res, req)
	}
}
